// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  CODE_GENERATION
  DEBUGGING
  CODE_REVIEW
}

enum Language {
 JAVA
  JAVASCRIPT
  PYTHON
  CSHARP
  PHP
  RUBY
  GO
  SWIFT
  KOTLIN
  TYPESCRIPT
  HTML
  CSS
  SQL
  PERL
  LUA
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  passwordHash String
  rt_token String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  // posts       Post[]   @relation("Author", fields: [authorId], references: [id]) // Add the opposite relation field

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  // author    User     @relation(fields: [authorId], references: [id])
  // authorId  String
  // user      User[]   @relation("Author", fields: [authorId], references: [id]) // Add the opposite relation field

  @@map("posts")
}

model Template {
  id          String   @id @default(uuid())
  name        String
  language    Language
  type        Type
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("templates")
}
